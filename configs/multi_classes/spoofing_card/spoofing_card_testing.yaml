data:
  test:
    module: torch.utils.data
    class: DataLoader
    DataLoader:
      dataset:
        module: flame.core.data.spoofing_card_dataset
        class: SpoofingCardDataset
        SpoofingCardDataset:
          dirname: '''dataset/test/'''
          classes:
            real: 0
            fake: 1
          card_types: ['''CMND''', '''CCCD''', '''CMCC''', '''CMND_BACK''', '''CCCD_BACK''']
          crop_ratios: [-0.1, 0., 2.5]
          image_sizes: [112, 224, 448]
          image_patterns: ['''*.jpg''', '''*.png''', '''*.jpeg''', '''*.JPG''', '''*.PNG''', '''*.JPEG''']
          label_patterns: ['''*.xml''']
      batch_size: 128
      shuffle: False

model:
  module: flame.core.model.spoofingnet
  class: SpoofingNet
  SpoofingNet:
    num_classes: 2
    num_samples: 3
    mb_pretrained: True
    mb_fixed: False
    mb_out_channels: 256
    feat_out_channels: 1280
    pool_out: 4

metrics:
  module: flame.handlers.metrics.metrics
  class: Metrics
  Metrics:
    metrics:
      loss:
        module: flame.handlers.metrics.loss
        class: Loss
        Loss:
          loss_fn: torch.nn.CrossEntropyLoss()
          output_transform: 'lambda x: (x[0].softmax(dim=1), x[1])'
      focal_loss:
        module: flame.handlers.metrics.focal_loss
        class: FocalLoss
        FocalLoss:
          alpha: 0.5
          gamma: 2.0
          reduction: '''mean'''
          output_transform: 'lambda x: (x[0], x[1])'
      accuracy:
        module: ignite.metrics
        class: Accuracy
        Accuracy:
          output_transform: 'lambda x: (x[0].softmax(dim=1), x[1])'
      precision:
        module: ignite.metrics
        class: Precision
        Precision:
          output_transform: 'lambda x: (x[0].softmax(dim=1), x[1])'
          average: True
      recall:
        module: ignite.metrics
        class: Recall
        Recall:
          output_transform: 'lambda x: (x[0].softmax(dim=1), x[1])'
          average: True
    attach_to:
      engine: '''test'''

screenlogger:
  module: flame.handlers.screenlogger
  class: ScreenLogger
  ScreenLogger:
    eval_names:
      - '''test'''

checkpoint_loader:
  module: flame.handlers.checkpoint
  class: CheckpointLoader
  CheckpointLoader:
    checkpoint_path: '''checkpoint/MNIST/2009050834/best_model_9_accuracy=0.9901.pt'''
    mode: '''test'''

engine:
  module: flame.core.engine.engine
  class: Evaluator
  Evaluator:
    dataset: config['data']['test']
    device: '''cpu'''

extralibs:
  torch: torch
