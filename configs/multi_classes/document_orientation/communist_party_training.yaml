data:
  train:
    module: torch.utils.data
    class: DataLoader
    DataLoader:
      dataset:
        module: flame.core.data.document_orientation_dataset
        class: OrientationDataset
        OrientationDataset:
          datadirs:
            - '''dataset/multi_classes/document_orientation/COMMUNIST_PARTY/train'''
            - '''dataset/multi_classes/document_orientation/COMMUNIST_PARTY/test'''
          classes:
            CARD_BACK: 0
          image_pattern: '''**/*.*'''
          image_size: (224, 224)
          inner_size: 256
          max_transforms: 7
          transforms:
            - 'iaa.Add(value=(-50, 50), per_channel=True)'
            - 'iaa.AdditiveGaussianNoise(loc=(-5, 5), scale=10, per_channel=True)'
            - 'iaa.Dropout(p=(0, 0.2))'
            - 'iaa.GammaContrast()'
            - 'iaa.JpegCompression(compression=(0, 50))'
            - 'iaa.GaussianBlur(sigma=(0, 2))'
            - 'iaa.MotionBlur()'
            - 'iaa.AddToHueAndSaturation(value=(-50, 50))'
            - 'iaa.PerspectiveTransform(scale=(0, 0.1))'
            - 'iaa.Pad(percent=(0, 0.1))'
            - 'iaa.Crop(percent=(0, 0.2))'
            - 'iaa.Grayscale(alpha=(0, 1))'
            - 'iaa.ChangeColorTemperature()'
            - 'iaa.Clouds()'
      batch_size: 64
      shuffle: True

  train_eval:
    module: torch.utils.data
    class: DataLoader
    DataLoader:
      dataset:
        module: flame.core.data.document_orientation_dataset
        class: OrientationDataset
        OrientationDataset:
          datadirs:
            - '''dataset/multi_classes/document_orientation/COMMUNIST_PARTY/train'''
            - '''dataset/multi_classes/document_orientation/COMMUNIST_PARTY/test'''
          classes:
            CARD_BACK: 0
          image_pattern: '''**/*.*'''
          image_size: (224, 224)
          inner_size: 256
      batch_size: 64
      shuffle: False

  valid:
    module: torch.utils.data
    class: DataLoader
    DataLoader:
      dataset:
        module: flame.core.data.document_orientation_dataset
        class: OrientationDataset
        OrientationDataset:
          datadirs:
            - '''dataset/multi_classes/document_orientation/COMMUNIST_PARTY/valid'''
          classes:
            CARD_BACK: 0
          image_pattern: '''**/*.*'''
          image_size: (224, 224)
          inner_size: 256
      batch_size: 64
      shuffle: False

loss:
  module: flame.core.loss.weighted_supclasses_crossentropy
  class: WeightedSupclassesCrossEntropy
  WeightedSupclassesCrossEntropy:
    weight: 'torch.tensor([1.]).to("cuda")'
    output_transform: 'lambda x: (x[0], x[1], x[2])'

model:
  module: flame.core.model.mobilenets.mobilenetv3_small
  class: MobileNetV3Small
  MobileNetV3Small:
    num_classes: 4
    pretrained: True
    features_fixed: False

optim:
  module: torch.optim
  class: SGD
  SGD:
    params: config['model'].parameters()
    lr: 0.01
    momentum: 0.9

train_evaluator:
  module: flame.handlers.metric_evaluator
  class: MetricEvaluator
  MetricEvaluator:
    dataset: config['data']['train_eval']
    device: '''cuda'''

valid_evaluator:
  module: flame.handlers.metric_evaluator
  class: MetricEvaluator
  MetricEvaluator:
    dataset: config['data']['valid']
    device: '''cuda'''

metrics:
  module: flame.handlers.metrics.metrics
  class: Metrics
  Metrics:
    metrics:
      loss:
        module: flame.handlers.metrics.loss
        class: Loss
        Loss:
          loss_fn:
            module: flame.core.loss.weighted_supclasses_crossentropy
            class: WeightedSupclassesCrossEntropy
            WeightedSupclassesCrossEntropy:
              weight: 'torch.tensor([1.]).to("cuda")'
          output_transform: 'lambda x: (x[0], x[1], x[2])'
      accuracy:
        module: ignite.metrics
        class: Accuracy
        Accuracy:
          output_transform: 'lambda x: (x[0].softmax(dim=1), x[1])'
      precision:
        module: ignite.metrics
        class: Precision
        Precision:
          average: True
          output_transform: 'lambda x: (x[0].softmax(dim=1), x[1])'
      recall:
        module: ignite.metrics
        class: Recall
        Recall:
          average: True
          output_transform: 'lambda x: (x[0].softmax(dim=1), x[1])'
    attach_to:
      train_evaluator: '''train'''
      valid_evaluator: '''valid'''

screenlogger:
  module: flame.handlers.screenlogger
  class: ScreenLogger
  ScreenLogger:
    eval_names:
      - '''train'''
      - '''valid'''

history:
  module: flame.handlers.checkpoint
  class: History

checkpoint_loader:
  module: flame.handlers.checkpoint
  class: CheckpointLoader
  CheckpointLoader:
    checkpoint_path: ''''''
    mode: '''train'''

terminate_on_nan:
  module: flame.handlers.terminate_on_nan
  class: TerminateOnNan

lr_scheduler:
  module: flame.handlers.lr_scheduler
  class: ReduceLROnPlateau
  ReduceLROnPlateau:
    score_name: '''loss'''
    evaluator_name: '''valid_evaluator'''
    mode: '''min'''
    patience: 20
    verbose: True

# early_stopping:
#   module: flame.handlers.early_stopping
#   class: EarlyStopping
#   EarlyStopping:
#     patience: 20
#     score_name: '''loss'''
#     evaluator_name: '''valid_evaluator'''
#     mode: '''min'''

best_saver:
  module: flame.handlers.checkpoint
  class: BestSaver
  BestSaver:
    dirname: '''checkpoint/COMMUNIST_PARTY/mobilenetv3_small'''
    score_name: '''loss'''
    mode: '''min'''
    evaluator_name: '''valid_evaluator'''
    n_saved: 1

backup_saver:
  module: flame.handlers.checkpoint
  class: BackupSaver
  BackupSaver:
    modules:
      - '''model'''
      - '''optim'''
      - '''backup_saver'''
      - '''best_saver'''
      - '''history'''
      - '''lr_scheduler'''
      # - '''early_stopping'''
    dirname: '''checkpoint/COMMUNIST_PARTY/mobilenetv3_small'''
    save_interval: 1
    n_saved: 1

engine:
  module: flame.core.engine.engine
  class: Trainer
  Trainer:
    dataset: config['data']['train']
    device: '''cuda'''
    max_epochs: 1000

extralibs:
  torch: torch
  iaa: imgaug.augmenters
