data:
  test:
    module: torch.utils.data
    class: DataLoader
    DataLoader:
      dataset:
        module: flame.core.data.orientation_dataset
        class: OrientationDataset
        OrientationDataset:
          datadirs:
            - '''dataset/document_orientation/VEHICLE_REGISTRATION/test'''
          classes:
            DKX_FRONT_TYPE_1: 0
            DKX_BACK_TYPE_1: 1
            DKX_FRONT_TYPE_5: 2
            DKX_BACK_TYPE_5: 3
          image_pattern: '''**/*.*'''
          image_size: (224, 224)
          inner_size: 256
      batch_size: 64
      shuffle: False

model:
  module: flame.core.model.mobilenets.mobilenetv3_small
  class: MobileNetV3Small
  MobileNetV3Small:
    num_classes: 4
    pretrained: False
    features_fixed: False

metrics:
  module: flame.handlers.metrics.metrics
  class: Metrics
  Metrics:
    metrics:
      loss:
        module: flame.handlers.metric.loss
        class: Loss
        Loss:
          loss_fn:
            module: flame.core.loss.weighted_supclasses_crossentropy
            class: WeightedSupclassesCrossEntropy
            WeightedSupclassesCrossEntropy:
              weight: 'torch.tensor([1.])'
          output_transform: 'lambda x: (x[0], x[1], x[2])'
      accuracy:
        module: ignite.metrics
        class: Accuracy
        Accuracy:
          output_transform: 'lambda x: (x[0].softmax(dim=1), x[1])'
      precision:
        module: ignite.metrics
        class: Precision
        Precision:
          average: True
          output_transform: 'lambda x: (x[0].softmax(dim=1), x[1])'
      recall:
        module: ignite.metrics
        class: Recall
        Recall:
          average: True
          output_transform: 'lambda x: (x[0].softmax(dim=1), x[1])'
    attach_to:
      engine: '''test'''

screenlogger:
  module: flame.handlers.screenlogger
  class: ScreenLogger
  ScreenLogger:
    eval_names:
      - '''test'''

checkpoint_loader:
  module: flame.handlers.checkpoint
  class: CheckpointLoader
  CheckpointLoader:
    checkpoint_path: '''checkpoint/2012051809/best_model_57_loss=-0.0000.pt'''
    mode: '''test'''

comparer:
  module: flame.handlers.pred_data_comparer
  class: PredDataComparer
  PredDataComparer:
    output_transform: 'lambda x: (x[0].softmax(dim=1), x[1], x[-1])'

engine:
  module: flame.core.engine.engine
  class: Evaluator
  Evaluator:
    dataset: config['data']['test']
    device: '''cuda'''

extralibs:
  torch: torch
