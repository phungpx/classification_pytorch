data:
  train:
    module: torch.utils.data
    class: DataLoader
    DataLoader:
      dataset:
        module: flame.core.data.text_direction
        class: TextDirection
        TextDirection:
          datadirs:
            - '''dataset/multi_classes/EPASS/train/'''
          image_pattern: '''**/*.*'''
          image_height: 32
          image_ratio: 8
          inner_size: 48
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
          transforms:
            - iaa.ChannelShuffle()
            - iaa.AdditiveGaussianNoise(scale=(0, 50), per_channel=True)
            - iaa.Add(value=(-100, 100), per_channel=True)
            - iaa.AddToHueAndSaturation((-50, 50), per_channel=True)
            - iaa.GammaContrast((0.5, 2.0), per_channel=True)
            - iaa.GaussianBlur(sigma=(0, 1))
            - iaa.MotionBlur()
            - iaa.PerspectiveTransform(scale=(0, 0.1))
            - iaa.JpegCompression(compression=(0, 30))
            - iaa.Grayscale(alpha=(0.0, 1.0))
            - iaa.ChangeColorTemperature()
            - iaa.Clouds()
            - iaa.Dropout()
          max_transform: 5
      batch_size: 128
      shuffle: True
      pin_memory: True
      drop_last: False
      num_workers: 12

  train_eval:
    module: torch.utils.data
    class: DataLoader
    DataLoader:
      dataset:
        module: flame.core.data.text_direction
        class: TextDirection
        TextDirection:
          datadirs:
            - '''dataset/multi_classes/EPASS/train/'''
          image_pattern: '''**/*.*'''
          image_height: 32
          image_ratio: 8
          inner_size: 48
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
      batch_size: 128
      shuffle: False
      pin_memory: True
      drop_last: False
      num_workers: 12

  valid:
    module: torch.utils.data
    class: DataLoader
    DataLoader:
      dataset:
        module: flame.core.data.text_direction
        class: TextDirection
        TextDirection:
          datadirs:
            - '''dataset/multi_classes/EPASS/valid/'''
          image_pattern: '''**/*.*'''
          image_height: 32
          image_ratio: 8
          inner_size: 48
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
      batch_size: 128
      shuffle: False
      pin_memory: True
      drop_last: False
      num_workers: 12

loss:
  module: flame.core.loss.loss
  class: Loss
  Loss:
    loss_fn: torch.nn.BCEWithLogitsLoss()
    output_transform: 'lambda x: (x[0], x[1])'

model:
  module: flame.core.model.mobilenets.mobilenetv3
  class: MobileNetV3Small
  MobileNetV3Small:
    num_classes: 1
    pretrained: True

optim:
  module: torch.optim
  class: SGD
  SGD:
    params: config['model'].parameters()
    lr: 0.01
    momentum: 0.9

train_evaluator:
  module: flame.handlers.metric_evaluator
  class: MetricEvaluator
  MetricEvaluator:
    dataset: config['data']['train_eval']
    device: '''cuda'''

valid_evaluator:
  module: flame.handlers.metric_evaluator
  class: MetricEvaluator
  MetricEvaluator:
    dataset: config['data']['valid']
    device: '''cuda'''

metrics:
  module: flame.handlers.metrics.metrics
  class: Metrics
  Metrics:
    metrics:
      loss:
        module: flame.handlers.metrics.loss
        class: Loss
        Loss:
          loss_fn: torch.nn.BCEWithLogitsLoss()
          output_transform: 'lambda x: (x[0], x[1])'
      accuracy:
        module: ignite.metrics
        class: Accuracy
        Accuracy:
          output_transform: 'lambda x: (x[0].sigmoid().round(), x[1])'
      precision:
        module: ignite.metrics
        class: Precision
        Precision:
          average: True
          output_transform: 'lambda x: (x[0].sigmoid().round(), x[1])'
      recall:
        module: ignite.metrics
        class: Recall
        Recall:
          average: True
          output_transform: 'lambda x: (x[0].sigmoid().round(), x[1])'
    attach_to:
      train_evaluator: '''train'''
      valid_evaluator: '''valid'''

screenlogger:
  module: flame.handlers.screenlogger
  class: ScreenLogger
  ScreenLogger:
    eval_names:
      - '''train'''
      - '''valid'''

history:
  module: flame.handlers.checkpoint
  class: History

checkpoint_loader:
  module: flame.handlers.checkpoint
  class: CheckpointLoader
  CheckpointLoader:
    checkpoint_path: ''''''
    mode: '''train'''

terminate_on_nan:
  module: flame.handlers.terminate_on_nan
  class: TerminateOnNan

lr_scheduler:
  module: flame.handlers.lr_scheduler
  class: ReduceLROnPlateau
  ReduceLROnPlateau:
    score_name: '''loss'''
    evaluator_name: '''valid_evaluator'''
    mode: '''min'''
    patience: 20
    verbose: True
    min_lr: 0.0001

# early_stopping:
#   module: flame.handlers.early_stopping
#   class: EarlyStopping
#   EarlyStopping:
#     score_name: '''loss'''
#     evaluator_name: '''valid_evaluator'''
#     mode: '''min'''
#     patience: 20

best_saver:
  module: flame.handlers.checkpoint
  class: BestSaver
  BestSaver:
    dirname: '''checkpoint/multi_classes/text_direction/EPASS/'''
    score_name: '''loss'''
    mode: '''min'''
    evaluator_name: '''valid_evaluator'''
    n_saved: 1

backup_saver:
  module: flame.handlers.checkpoint
  class: BackupSaver
  BackupSaver:
    modules:
      - '''model'''
      - '''optim'''
      - '''backup_saver'''
      - '''best_saver'''
      - '''history'''
      - '''lr_scheduler'''
      # - '''early_stopping'''
    dirname: '''checkpoint/multi_classes/text_direction/EPASS/'''
    save_interval: 1
    n_saved: 1

engine:
  module: flame.core.engine.engine
  class: Trainer
  Trainer:
    dataset: config['data']['train']
    device: '''cuda'''
    max_epochs: 1000

extralibs:
  torch: torch
  iaa: imgaug.augmenters
