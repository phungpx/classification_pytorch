data:
  test:
    module: torch.utils.data
    class: DataLoader
    DataLoader:
      dataset:
        module: flame.core.data.document_direction
        class: DocumentDirection
        DocumentDirection:
          data_dirs:
            - '''/extdata/ocr/phungpx/projects/PHUNGPX/semantic_segmentation_pytorch/dataset/NATCOM2/test/'''
          classes:
            CARD_BACK_TYPE_1: 0
            CARD_FRONT_TYPE_1: 1
            CARD_BACK_TYPE_2: 2
            CARD_FRONT_TYPE_2: 3
            CARD_BACK_TYPE_3: 4
            CARD_FRONT_TYPE_3: 5
            PASSPORT: 6
            BLX: 7
          image_patterns:
            - '''**/*_quad.jpg'''
            - '''**/*_quad.png'''
            - '''**/*_quad.jpeg'''
            - '''**/*_quad.JPG'''
            - '''**/*_quad.PNG'''
            - '''**/*_quad.JPEG'''
          image_size: (224, 224)
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
          inner_size: 256
      batch_size: 64
      shuffle: False

model:
  module: flame.core.model.mobilenets.mobilenetv3
  class: MobileNetV3Small
  MobileNetV3Small:
    num_classes: 4
    pretrained: False
    features_fixed: False

metrics:
  module: flame.handlers.metrics.metrics
  class: Metrics
  Metrics:
    metrics:
      loss:
        module: flame.handlers.metrics.loss
        class: Loss
        Loss:
          loss_fn:
            module: flame.core.loss.weighted_supclasses_crossentropy
            class: WeightedSupclassesCrossEntropy
            WeightedSupclassesCrossEntropy:
              weight: 'torch.tensor([0.1320773, 0.1085753, 0.136836, 0.1139167, 0.1415946, 0.120909, 0.1345052, 0.1115859]).to("cuda")'
          output_transform: 'lambda x: (x[0], x[1], x[2])'
      accuracy:
        module: ignite.metrics
        class: Accuracy
        Accuracy:
          output_transform: 'lambda x: (x[0].softmax(dim=1), x[1])'
      precision:
        module: ignite.metrics
        class: Precision
        Precision:
          average: True
          output_transform: 'lambda x: (x[0].softmax(dim=1), x[1])'
      recall:
        module: ignite.metrics
        class: Recall
        Recall:
          average: True
          output_transform: 'lambda x: (x[0].softmax(dim=1), x[1])'
    attach_to:
      engine: '''test'''

screenlogger:
  module: flame.handlers.screenlogger
  class: ScreenLogger
  ScreenLogger:
    eval_names:
      - '''test'''

checkpoint_loader:
  module: flame.handlers.checkpoint
  class: CheckpointLoader
  CheckpointLoader:
    checkpoint_path: '''checkpoint/document_direction/NATCOM/mobilenetv3_small/2205301639/best_model_73_loss=-0.0147.pt'''
    mode: '''test'''

comparer:
  module: flame.handlers.pred_comparer
  class: Comparer
  Comparer:
    is_multiclass: True
    output_transform: 'lambda x: (x[0].softmax(dim=1), x[1], x[-1])'

engine:
  module: flame.core.engine.engine
  class: Evaluator
  Evaluator:
    dataset: config['data']['test']
    device: '''cuda'''

extralibs:
  torch: torch
