data:
  test:
    module: torch.utils.data
    class: DataLoader
    DataLoader:
      dataset:
        module: flame.core.data.doc_classification_dataset
        class: DocClassificationDataset
        DocClassificationDataset:
          datadirs:
            - '''dataset/multi_classes/doc_classification/VEHICLE_REGISTRATION/test'''
          classes:
            DKX_BACK_TYPE_1: 0
            DKX_TYPE_1: 1
            DKX_BACK_TYPE_2: 2
            DKX_TYPE_2: 3
            DKX_BACK_TYPE_3: 4
            DKX_TYPE_3: 5
            DKX_BACK_TYPE_5: 6
            DKX_FRONT_TYPE_5: 7
            OTHERS: 8
          image_patterns:
            - '''**/*.*'''
          image_size: (224, 224)
          inner_size: 256
      batch_size: 64
      pin_memory: True
      num_workers: 12
      drop_last: False
      shuffle: False

model:
  module: flame.core.model.mobilenets.mobilenetv3_small
  class: MobileNetV3Small
  MobileNetV3Small:
    num_classes: 9
    pretrained: False
    features_fixed: False

metrics:
  module: flame.handlers.metrics.metrics
  class: Metrics
  Metrics:
    metrics:
      loss:
        module: flame.handlers.metrics.loss
        class: Loss
        Loss:
          loss_fn:
            module: torch.nn
            class: CrossEntropyLoss
            CrossEntropyLoss:
              weight: "torch.tensor([0.1088215, 0.1114017, 0.1116109, 0.1142608, 0.1116457, 0.1159344, 0.109728, 0.1121339, 0.104463]).to('cuda')"
          output_transform: 'lambda x: (x[0], x[1])'
      accuracy:
        module: ignite.metrics
        class: Accuracy
        Accuracy:
          output_transform: 'lambda x: (x[0].softmax(dim=1), x[1])'
      precision:
        module: ignite.metrics
        class: Precision
        Precision:
          average: True
          output_transform: 'lambda x: (x[0].softmax(dim=1), x[1])'
      recall:
        module: ignite.metrics
        class: Recall
        Recall:
          average: True
          output_transform: 'lambda x: (x[0].softmax(dim=1), x[1])'
    attach_to:
      engine: '''test'''

screenlogger:
  module: flame.handlers.screenlogger
  class: ScreenLogger
  ScreenLogger:
    eval_names:
      - '''test'''

checkpoint_loader:
  module: flame.handlers.checkpoint
  class: CheckpointLoader
  CheckpointLoader:
    checkpoint_path: '''checkpoint/VEHICLE_REGISTRATION/classification/mobilenetv3_small/2110051614/best_model_45_loss=-0.0019.pt'''
    mode: '''test'''

# comparer:
#   module: flame.handlers.pred_data_comparer
#   class: PredDataComparer
#   PredDataComparer:
#     output_transform: 'lambda x: (x[0].softmax(dim=1), x[1], x[-1])'

engine:
  module: flame.core.engine.engine
  class: Evaluator
  Evaluator:
    dataset: config['data']['test']
    device: '''cuda'''

extralibs:
  torch: torch
